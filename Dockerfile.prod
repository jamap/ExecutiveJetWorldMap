# Executive Aviation Route Planner - Production
# Multi-stage Alpine + Apache build optimized for production
# Includes security hardening and performance optimizations

FROM alpine:3.18 AS base

# Install Apache and security tools
RUN apk add --no-cache \
    apache2 \
    apache2-utils \
    wget \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Production stage
FROM base AS production

# Metadata
LABEL maintainer="jose.armando.porto@gmail.com"
LABEL description="Executive Aviation Route Planner - Production Build"
LABEL version="1.0.0"
LABEL environment="production"

# Security: Create non-root user
RUN addgroup -g 1001 aviation \
    && adduser -D -u 1001 -G aviation aviation

# Create directories with proper permissions
RUN mkdir -p /var/www/html \
    && mkdir -p /var/log/apache2 \
    && mkdir -p /run/apache2 \
    && chown -R aviation:aviation /var/www/html \
    && chown -R aviation:aviation /var/log/apache2 \
    && chown -R aviation:aviation /run/apache2

# Copy application files
COPY --chown=aviation:aviation index.html /var/www/html/
COPY --chown=aviation:aviation style.css /var/www/html/
COPY --chown=aviation:aviation script.js /var/www/html/
COPY --chown=aviation:aviation data.js /var/www/html/

# Production Apache configuration
COPY <<EOF /etc/apache2/httpd.conf
# Executive Aviation Route Planner - Production Configuration
ServerRoot /var/www
Listen 80
ServerName aviation-planner.local

# Core Modules
LoadModule mpm_prefork_module modules/mod_mpm_prefork.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule headers_module modules/mod_headers.so
LoadModule deflate_module modules/mod_deflate.so
LoadModule expires_module modules/mod_expires.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule env_module modules/mod_env.so

# Security Configuration
ServerTokens Prod
ServerSignature Off

# Performance Tuning
StartServers 2
MinSpareServers 2
MaxSpareServers 5
MaxRequestWorkers 150
MaxConnectionsPerChild 1000

# Document Root
DocumentRoot /var/www/html
DirectoryIndex index.html

<Directory /var/www/html>
    AllowOverride None
    Require all granted
    Options -Indexes -Includes -ExecCGI +FollowSymLinks
</Directory>

# MIME Types
TypesConfig /etc/apache2/mime.types

# Security Headers
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options DENY
Header always set X-XSS-Protection "1; mode=block"
Header always set Referrer-Policy "strict-origin-when-cross-origin"
Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' cdn.jsdelivr.net; img-src 'self' data: cartodb-basemaps-a.global.ssl.fastly.net cartodb-basemaps-b.global.ssl.fastly.net cartodb-basemaps-c.global.ssl.fastly.net cartodb-basemaps-d.global.ssl.fastly.net; connect-src 'self' cartodb-basemaps-a.global.ssl.fastly.net cartodb-basemaps-b.global.ssl.fastly.net cartodb-basemaps-c.global.ssl.fastly.net cartodb-basemaps-d.global.ssl.fastly.net; font-src 'self' data:;"

# Compression
<IfModule mod_deflate.c>
    SetOutputFilter DEFLATE
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    # Don't compress images
    SetEnvIfNoCase Request_URI \\.(?:gif|jpe?g|png|ico)$ no-gzip dont-vary
    SetEnvIfNoCase Request_URI \\.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
</IfModule>

# Cache Control
<IfModule mod_expires.c>
    ExpiresActive On
    # HTML and Data files - short cache
    ExpiresByType text/html "access plus 1 hour"
    ExpiresByType application/javascript "access plus 1 day"
    # CSS and JS - medium cache
    ExpiresByType text/css "access plus 1 week"
    ExpiresByType application/javascript "access plus 1 week"
    # Images - long cache
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/ico "access plus 1 month"
</IfModule>

# Hide sensitive files
<FilesMatch "\\.(git|env|log|md)$">
    Require all denied
</FilesMatch>

# Error and Access logs
ErrorLog /var/log/apache2/error.log
LogLevel warn
CustomLog /var/log/apache2/access.log combined

# Disable TRACE method
TraceEnable Off
EOF

# Set proper permissions
RUN chmod 644 /etc/apache2/httpd.conf \
    && chmod -R 755 /var/www/html \
    && chown -R aviation:aviation /var/www/html

# Health check with timeout
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider --timeout=3 http://localhost/ || exit 1

# Expose port
EXPOSE 80

# Switch to non-root user
USER aviation

# Production startup script
COPY <<EOF /start-prod.sh
#!/bin/sh
echo "🛩️  Executive Aviation Route Planner - PRODUCTION"
echo "🔒 Alpine Linux $(cat /etc/alpine-release) + Apache HTTPd"
echo "🌐 Available at: http://localhost"
echo "📊 Health check enabled"
echo "👤 Running as user: $(whoami)"
echo ""
exec /usr/sbin/httpd -D FOREGROUND
EOF

RUN chmod +x /start-prod.sh

# Start Apache
CMD ["/start-prod.sh"]